# Environment Configuration for Sprint Capacity Planner
# Copy this file to .env and update the values for your local setup

# Node Environment
NODE_ENV=development

# Database Configuration
# DATABASE_TYPE: Choose between 'mysql', 'sqlite', 'postgres', or 'postgresql' (default: mysql)
# Note: 'postgres' and 'postgresql' are equivalent and both map to PostgreSQL
DATABASE_TYPE=mysql

# MySQL Configuration (used when DATABASE_TYPE=mysql)
DATABASE_HOST=localhost
DATABASE_PORT=3306
DATABASE_USER=dbuser
DATABASE_PASSWORD=dbpassword
DATABASE_NAME=mydb

# PostgreSQL Configuration (used when DATABASE_TYPE=postgres or DATABASE_TYPE=postgresql)
# Uncomment and configure these variables when using PostgreSQL

# Required PostgreSQL Variables
# DATABASE_HOST=localhost                    # PostgreSQL server hostname or IP address
# DATABASE_PORT=5432                         # PostgreSQL server port (default: 5432)
# DATABASE_USER=your_postgres_user           # PostgreSQL username (required)
# DATABASE_PASSWORD=your_postgres_password   # PostgreSQL password (required)
# DATABASE_NAME=your_database_name           # PostgreSQL database name (required)

# Optional PostgreSQL Variables
# DATABASE_SCHEMA=public                     # PostgreSQL schema name (default: public)

# PostgreSQL SSL Configuration (recommended for production environments)
# DATABASE_SSL_ENABLED=true                 # Enable SSL connection (default: false in development, true in production)
# DATABASE_SSL_REJECT_UNAUTHORIZED=false    # Reject unauthorized SSL certificates (default: false for self-signed certs)
# DATABASE_SSL_CA_CERT_PATH=                # Path to CA certificate file for SSL verification
# DATABASE_SSL_CLIENT_CERT_PATH=            # Path to client certificate file for mutual SSL authentication
# DATABASE_SSL_CLIENT_KEY_PATH=             # Path to client private key file for mutual SSL authentication

# PostgreSQL Connection Pool Settings (optional - TypeORM defaults will be used if not specified)
# DATABASE_CONNECTION_POOL_MIN=0            # Minimum number of connections in pool (default: 0)
# DATABASE_CONNECTION_POOL_MAX=10           # Maximum number of connections in pool (default: 10)
# DATABASE_CONNECTION_TIMEOUT=30000         # Connection timeout in milliseconds (default: 30000)
# DATABASE_IDLE_TIMEOUT=10000               # Idle connection timeout in milliseconds (default: 10000)

# PostgreSQL Advanced Settings (optional)
# DATABASE_RETRY_ATTEMPTS=3                 # Number of connection retry attempts (default: 3)
# DATABASE_RETRY_DELAY=1000                 # Delay between retry attempts in milliseconds (default: 1000)
# DATABASE_STATEMENT_TIMEOUT=0              # Statement timeout in milliseconds (0 = no timeout)
# DATABASE_QUERY_TIMEOUT=0                  # Query timeout in milliseconds (0 = no timeout)

# PostgreSQL Examples for Different Environments:
#
# Local Development:
# DATABASE_TYPE=postgres
# DATABASE_HOST=localhost
# DATABASE_PORT=5432
# DATABASE_USER=dev_user
# DATABASE_PASSWORD=dev_password
# DATABASE_NAME=sprint_planner_dev
# DATABASE_SCHEMA=public
#
# Production with SSL:
# DATABASE_TYPE=postgres
# DATABASE_HOST=your-postgres-server.com
# DATABASE_PORT=5432
# DATABASE_USER=prod_user
# DATABASE_PASSWORD=secure_prod_password
# DATABASE_NAME=sprint_planner_prod
# DATABASE_SCHEMA=public
# DATABASE_SSL_ENABLED=true
# DATABASE_SSL_REJECT_UNAUTHORIZED=true
#
# Docker Compose (using service name as host):
# DATABASE_TYPE=postgres
# DATABASE_HOST=postgres
# DATABASE_PORT=5432
# DATABASE_USER=postgres
# DATABASE_PASSWORD=postgres
# DATABASE_NAME=sprint_planner
# DATABASE_SCHEMA=public

# SQLite Configuration (used when DATABASE_TYPE=sqlite)
# DATABASE_PATH: Path to SQLite database file (default: ./data/database.sqlite)
DATABASE_PATH=./data/database.sqlite

# Application Configuration
PORT=3300
FRONTEND_URL=http://localhost:3000

# AWS CDK Configuration (for deployment)
CDK_DEFAULT_ACCOUNT=your-aws-account-id
CDK_DEFAULT_REGION=us-east-1

# NPM Package Version (auto-populated)
npm_package_version=1.0.0